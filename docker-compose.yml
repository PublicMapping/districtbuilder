version: "2.4"
services:
  database:
    image: quay.io/azavea/postgis:3-postgres12.2-slim
    environment:
      - POSTGRES_USER=districtbuilder
      - POSTGRES_PASSWORD=districtbuilder
      - POSTGRES_DB=districtbuilder
    healthcheck:
      test: pg_isready -U districtbuilder
      interval: 3s
      timeout: 3s
      retries: 3

  server:
    image: districtbuilder
    environment:
      - POSTGRES_HOST=database
      - POSTGRES_PORT=5432
      - POSTGRES_USER=districtbuilder
      - POSTGRES_PASSWORD=districtbuilder
      - POSTGRES_DB=districtbuilder
      - NODE_ENV=Development
      - NODE_OPTIONS=--max-old-space-size=16384
      - AWS_PROFILE=${AWS_PROFILE:-district-builder}
      - AWS_REGION=${AWS_REGION:-us-east-1}
      - JWT_SECRET=insecure
      - JWT_EXPIRATION_IN_MS=604800000  # 1 week
      - CLIENT_URL=http://localhost:3003  # TODO: make this configurable per environment
    build:
      context: ./src/server
      dockerfile: Dockerfile
    volumes:
      - ./src/server:/home/node/app/server
      - ./src/shared:/home/node/app/shared
      - /var/cache/district-builder-server-node-modules:/home/node/app/server/node_modules
      - $HOME/.cache/district-builder:/usr/local/share/.cache/yarn
      - $HOME/.aws:/root/.aws:ro
    working_dir: /home/node/app/server
    depends_on:
      database:
        condition: service_healthy
    command: start:dev

  client:
    image: node:12-slim
    environment:
      - BASE_URL=${BASE_URL:-http://server:3005}
      - CHOKIDAR_USEPOLLING=true
      - CHOKIDAR_INTERVAL=250
      # Without this, ESLint will not respect our .eslintrc.js files when run via react-scripts start.
      # This is apparently no longer needed in later versions of react-scripts, but for our version
      # this is the way to force ESLint to respect our .eslintrc.js config files.
      - EXTEND_ESLINT=true
      - PORT=3003
    volumes:
      - ./:/home/node/app
      - ./src/server/dist/server/src/static:/home/node/app/build
      - /var/cache/district-builder-client-node-modules:/home/node/app/node_modules
      - $HOME/.cache/district-builder:/usr/local/share/.cache/yarn
    working_dir: /home/node/app
    command: yarn start

  manage:
    image: districtbuilder-manage
    environment:
      - POSTGRES_HOST=database
      - POSTGRES_PORT=5432
      - POSTGRES_USER=districtbuilder
      - POSTGRES_PASSWORD=districtbuilder
      - POSTGRES_DB=districtbuilder
      - AWS_PROFILE=${AWS_PROFILE:-district-builder}
      - NODE_OPTIONS=--max-old-space-size=16384
    build:
      context: ./src/manage
      dockerfile: Dockerfile
    volumes:
      - ./src/server:/home/node/app/server
      - ./src/shared:/home/node/app/shared
      - ./src/manage:/home/node/app/manage
      - /var/cache/district-builder-server-node-modules:/home/node/app/server/node_modules
      - /var/cache/district-builder-manage-node-modules:/home/node/app/manage/node_modules
      - $HOME/.cache/district-builder:/usr/local/share/.cache/yarn
      - $HOME/.aws:/root/.aws:ro
    working_dir: /home/node/app/manage
    depends_on:
      database:
        condition: service_healthy
    command: bash
